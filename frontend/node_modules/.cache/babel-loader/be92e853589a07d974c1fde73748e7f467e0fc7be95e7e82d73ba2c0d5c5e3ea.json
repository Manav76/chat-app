{"ast":null,"code":"var _jsxFileName = \"/Users/surajpurohit/Desktop/chat-app/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    // Check if user is logged in on mount\n    const checkLoggedIn = async () => {\n      if (token) {\n        try {\n          // For now, we'll just set a dummy user\n          // Later, we'll make an API call to /auth/me\n          setCurrentUser({\n            id: '123',\n            email: 'user@example.com'\n          });\n        } catch (error) {\n          console.error('Error verifying token:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    checkLoggedIn();\n  }, [token]);\n  const login = async (email, password) => {\n    // This will be replaced with actual API call\n    try {\n      // Simulate API call\n      const response = {\n        token: 'dummy-token-123'\n      };\n      localStorage.setItem('token', response.token);\n      setToken(response.token);\n      setCurrentUser({\n        id: '123',\n        email: email\n      });\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n  const register = async (email, password) => {\n    // This will be replaced with actual API call\n    try {\n      // Simulate API call\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error);\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setCurrentUser(null);\n  };\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"jtwUNoxKZ5AWYW2pfoZjKzJF1gw=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","token","setToken","localStorage","getItem","checkLoggedIn","id","email","error","console","logout","login","password","response","setItem","register","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/surajpurohit/Desktop/chat-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const useAuth = () => useContext(AuthContext);\n\nconst AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  useEffect(() => {\n    // Check if user is logged in on mount\n    const checkLoggedIn = async () => {\n      if (token) {\n        try {\n          // For now, we'll just set a dummy user\n          // Later, we'll make an API call to /auth/me\n          setCurrentUser({\n            id: '123',\n            email: 'user@example.com'\n          });\n        } catch (error) {\n          console.error('Error verifying token:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n\n    checkLoggedIn();\n  }, [token]);\n\n  const login = async (email, password) => {\n    // This will be replaced with actual API call\n    try {\n      // Simulate API call\n      const response = { token: 'dummy-token-123' };\n      \n      localStorage.setItem('token', response.token);\n      setToken(response.token);\n      setCurrentUser({\n        id: '123',\n        email: email\n      });\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  const register = async (email, password) => {\n    // This will be replaced with actual API call\n    try {\n      // Simulate API call\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error);\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setCurrentUser(null);\n  };\n\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}