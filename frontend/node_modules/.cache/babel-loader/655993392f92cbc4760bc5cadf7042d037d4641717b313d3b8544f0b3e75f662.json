{"ast":null,"code":"var _jsxFileName = \"/Users/surajpurohit/Desktop/chat-app/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is already logged in on mount\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          // Fetch user data with the token\n          const response = await fetch('http://localhost:8000/auth/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const userData = await response.json();\n            setUser(userData);\n          } else {\n            // If token is invalid, remove it\n            localStorage.removeItem('token');\n          }\n        }\n      } catch (err) {\n        console.error('Error checking authentication:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Register a new user\n  const register = async (email, username, password) => {\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:8000/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.detail || 'Registration failed');\n      }\n\n      // After successful registration, log the user in\n      return await login(email, password);\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:8000/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Login failed');\n      }\n      const data = await response.json();\n      console.log(\"Login response:\", data);\n\n      // Store the token\n      localStorage.setItem('token', data.access_token);\n\n      // Fetch user data\n      const userResponse = await fetch('http://localhost:8000/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${data.access_token}`\n        }\n      });\n      if (!userResponse.ok) {\n        throw new Error('Failed to get user data');\n      }\n      const userData = await userResponse.json();\n      setUser(userData);\n      return userData;\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  // Get auth header for API requests\n  const getAuthHeader = () => {\n    const token = localStorage.getItem('token');\n    return token ? {\n      'Authorization': `Bearer ${token}`\n    } : {};\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    register,\n    login,\n    logout,\n    getAuthHeader,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","checkLoggedIn","token","localStorage","getItem","response","fetch","headers","ok","userData","json","removeItem","err","console","register","email","username","password","method","body","JSON","stringify","data","Error","detail","login","message","errorData","log","setItem","access_token","userResponse","logout","getAuthHeader","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/surajpurohit/Desktop/chat-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is already logged in on mount\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          // Fetch user data with the token\n          const response = await fetch('http://localhost:8000/auth/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n\n          if (response.ok) {\n            const userData = await response.json();\n            setUser(userData);\n          } else {\n            // If token is invalid, remove it\n            localStorage.removeItem('token');\n          }\n        }\n      } catch (err) {\n        console.error('Error checking authentication:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  // Register a new user\n  const register = async (email, username, password) => {\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:8000/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, username, password })\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.detail || 'Registration failed');\n      }\n\n      // After successful registration, log the user in\n      return await login(email, password);\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:8000/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Login failed');\n      }\n\n      const data = await response.json();\n      console.log(\"Login response:\", data);\n\n      // Store the token\n      localStorage.setItem('token', data.access_token);\n\n      // Fetch user data\n      const userResponse = await fetch('http://localhost:8000/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${data.access_token}`\n        }\n      });\n\n      if (!userResponse.ok) {\n        throw new Error('Failed to get user data');\n      }\n\n      const userData = await userResponse.json();\n      setUser(userData);\n      return userData;\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  // Get auth header for API requests\n  const getAuthHeader = () => {\n    const token = localStorage.getItem('token');\n    return token ? { 'Authorization': `Bearer ${token}` } : {};\n  };\n\n  const value = {\n    user,\n    loading,\n    error,\n    register,\n    login,\n    logout,\n    getAuthHeader,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}